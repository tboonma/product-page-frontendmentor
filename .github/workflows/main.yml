name: Product-Page-CI

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    name: lint-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test
  publish:
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy Production
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
  publish-beta:
    needs: [lint, test]
    if: github.event_name == 'pull_request'
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy Production
        id: deploy-beta-command
        run: |
          echo "::set-output name=deploy-output::$(vercel --token=${{ secrets.VERCEL_TOKEN }})"
      - name: Notify update in PR
        uses: thollander/actions-comment-pull-request@v1
        if: success() && github.event.action == 'opened'
        with:
          message: |
            New beta version for this Pull Request has been released
            Service URL: ${{ steps.deploy-beta-command.outputs.deploy-output }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
